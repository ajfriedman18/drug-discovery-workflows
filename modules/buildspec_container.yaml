# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

version: 0.2

phases:
  pre_build:
    commands:
      - echo Build started on `date`
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo "Checking for repository ${IMAGE_REPO_NAME}"
      - if aws ecr describe-repositories --repository-names $IMAGE_REPO_NAME > /dev/null 2>$?;
        then
        echo "Repository $IMAGE_REPO_NAME exists.";
        else
        echo "Repository $IMAGE_REPO_NAME does not exist, creating...";
        aws ecr create-repository --repository-name $IMAGE_REPO_NAME > /dev/null;
        fi
      - echo Building the image
      - docker build --build-arg AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION -t $IMAGE_REPO_NAME:$IMAGE_TAG $BUILD_CONTEXT
      - echo tagging the $IMAGE_REPO_NAME:$IMAGE_TAG image
      - docker tag $IMAGE_REPO_NAME $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:      
      - echo Pushing the $IMAGE_REPO_NAME image
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      # - JSON_DATA=$( jq -n --arg uid "$IMAGE_REPO_NAME" '{Status:"SUCCESS", Reason:"Configuration Complete","UniqueId":$uid, "Data":"Application has completed configuration."}' )
      # - curl -X PUT -H "Content-Type:" --data-binary "$JSON_DATA" "$WAIT_CONDITION_HANDLE"
      - echo Build completed on `date`